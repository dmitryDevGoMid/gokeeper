// Code generated by MockGen. DO NOT EDIT.
// Source: files.go

// Package mock_files is a generated GoMock package.
package mock_files

import (
	context "context"
	files "github.com/dmitryDevGoMid/gokeeper/server/internal/stuffing/repository/files"
	user "github.com/dmitryDevGoMid/gokeeper/server/internal/stuffing/repository/user"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFilesRepository is a mock of FilesRepository interface.
type MockFilesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFilesRepositoryMockRecorder
}

// MockFilesRepositoryMockRecorder is the mock recorder for MockFilesRepository.
type MockFilesRepositoryMockRecorder struct {
	mock *MockFilesRepository
}

// NewMockFilesRepository creates a new mock instance.
func NewMockFilesRepository(ctrl *gomock.Controller) *MockFilesRepository {
	mock := &MockFilesRepository{ctrl: ctrl}
	mock.recorder = &MockFilesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFilesRepository) EXPECT() *MockFilesRepositoryMockRecorder {
	return m.recorder
}

// DeleteFilesByID mocks base method.
func (m *MockFilesRepository) DeleteFilesByID(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFilesByID", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFilesByID indicates an expected call of DeleteFilesByID.
func (mr *MockFilesRepositoryMockRecorder) DeleteFilesByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFilesByID", reflect.TypeOf((*MockFilesRepository)(nil).DeleteFilesByID), ctx, id)
}

// GetByUserIdListFiles mocks base method.
func (m *MockFilesRepository) GetByUserIdListFiles(ctx context.Context, user *user.User) (*[]files.Files, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserIdListFiles", ctx, user)
	ret0, _ := ret[0].(*[]files.Files)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserIdListFiles indicates an expected call of GetByUserIdListFiles.
func (mr *MockFilesRepositoryMockRecorder) GetByUserIdListFiles(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserIdListFiles", reflect.TypeOf((*MockFilesRepository)(nil).GetByUserIdListFiles), ctx, user)
}
